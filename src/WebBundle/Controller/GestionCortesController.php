<?php

namespace WebBundle\Controller;

use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use Symfony\Component\HttpFoundation\File\Exception\FileException;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\Request;
use WebBundle\Entity\Corte;
use WebBundle\Entity\Categoria;
use WebBundle\Entity\Herramienta;
use WebBundle\Form\CorteType;
use WebBundle\Form\CategoriaType;
use WebBundle\Form\HerramientaType;


class GestionCortesController extends Controller
{
    public function nuevoCorteAction(Request $request)
    {
        
        $corte = new Corte();
        //Construyendo el formulario    
        $form = $this->createForm(CorteType::class, $corte);

        $form->handleRequest($request);
        

        if ($form->isSubmitted() && $form->isValid()) {

            $corte = $form->getData();
            $fotoFile = $corte->getFoto();
            $fileName = $this->generateUniqueFileName().'.'.$fotoFile->guessExtension();
            // Move the file to the directory where brochures are stored
            try{
                $fotoFile->move(
                    $this->getParameter('corteImg_directory'),
                    $fileName
                );  
            }  catch (FileException $e) {
                // ... handle exception if something happens during file upload
            } 
            $corte->setFoto($fileName);
            $corte->setFechaCreacion(new \Datetime());
            // $form->getData() holds the submitted values
             // but, the original `$corte` variable has also been updated    
            // ... perform some action, such as saving the corte to the database
            // for example, if corte is a Doctrine entity, save it!
            $entityManager = $this->getDoctrine()->getManager();
            $entityManager->persist($corte);
            $entityManager->flush();
                // corte viene de la BD
                
            return $this->redirectToRoute('corte', array('id' => $corte->getId() ));
        }

    //Capturar el repositorio de la tabla contra la base de datos y corte se refiere a la entity
 
    return $this->render('gestionCortes/nuevoCorte.html.twig',array(
        'form'=>$form->createView()
    ));
    }






    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }

    
    

    
    public function nuevaCatAction(Request $request)
    {              
        $categoria = new Categoria();
        //Construyendo el formulario    
        $form = $this->createForm(CategoriaType::class, $categoria);

        $form->handleRequest($request);
        

        if ($form->isSubmitted() && $form->isValid()) {

            $categoria = $form->getData();
            $fotoFile = $categoria->getFoto();
            $fileName = $this->generateUniqueFileName().'.'.$fotoFile->guessExtension();
            // Move the file to the directory where brochures are stored
            try{
                $fotoFile->move(
                    $this->getParameter('corteImg_directory'),
                    $fileName
                );  
            }  catch (FileException $e) {
                // ... handle exception if something happens during file upload
            } 
            $categoria->setFoto($fileName);
             // $form->getData() holds the submitted values
             // but, the original `$corte` variable has also been updated    
            // ... perform some action, such as saving the corte to the database
            // for example, if corte is a Doctrine entity, save it!
            $entityManager = $this->getDoctrine()->getManager();
            $entityManager->persist($categoria);
            $entityManager->flush();
                // corte viene de la BD
            return $this->redirectToRoute('categoria', array('id' => $categoria->getId() ));
        }
    return $this->render('gestionCortes/nuevaCategoria.html.twig',array(
        'form'=>$form->createView()
    ));
    }

    
    

    
    public function nuevaHerramientaAction(Request $request)
    {              
        $herramienta = new Herramienta();
        //Construyendo el formulario    
        $form = $this->createForm(HerramientaType::class, $herramienta);

        $form->handleRequest($request);
        

        if ($form->isSubmitted() && $form->isValid()) {

            $herramienta = $form->getData();

            $entityManager = $this->getDoctrine()->getManager();
            $entityManager->persist($herramienta);
            $entityManager->flush();
            return $this->redirectToRoute('herramienta', array('id' => $herramienta->getId() ));
        }
    return $this->render('gestionCortes/nuevaHerramienta.html.twig',array(
        'form'=>$form->createView()
    ));
    }
}    